ㅁ Vue.js 
웹페이지 화면을 개발하기위한 프런트엔드 프레임워크

ㅁ 프론트엔드 프레임워크
1.컴포넌트- 소프트웨어의 부품 표준으로 정의된 규약하 모듈을 애플리케이션의 부품처럼 재사용 
2.라우팅-Client-Side(클라이언트사이드:네이트워크의 한방식인 클라이언트-서버 구조의 클라이언트 쪽에서 행해지는 처리
3. 상태관리-컴포넌트 상태를 관리 , 이를통해 컴포넌트(프로그래밍에 있어 재사용이 가능한 각각의 독립된 모듈) 끼리의 데이터공유 가능

출처: https://cluster-taek.tistory.com/entry/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%ACFront-End-Framework-%EB%9E%80

뷰 외에도 리액트,앵귤러가 있으며 높은 점유율을 차지하고있음

ㅁ UI 화면단 라이브러리
MVVM패턴 사용

View 사용자에게 보여지는 화면 (구글홈페이지 ex) 사용자에게 보여지는 전체적 화면)
DOM 문서 객체 모델(DOM, Document Object Model)은 XML이나 HTML 문서에 접근하기 위한 일종의 인터페이스 (구글 로고, 검색창, 기보드와 마이크 아이콘, 버튼등 화면에 나타나는 HTML문서상의 모든요소)
DOM Listener 돔의 변경 내역에 대해 즉각적으로 반응 특정 로직 수행장치 (검색버튼 클릭시 돔리스너에서 버튼의 클릭 감지, 버튼동작 검색결과를 보여주는 로직처리)
Data Binding 뷰에 표시되는 내용과 모델의 데이터 동기화 (로직처리과정에서 데이터바인딩관여, 검색결과에 해당하는 데이터를 Model에서 가져와 화면에 나타내줌)
Model 데이터를 담는 용기. 보통은 서버에서 가져온 데이터를 자바스크립트 객체형태로 저장 
ViewModel 뷰와 모델의 중간영역. 돔 리스너와 데이터바인딩을 제공하는 영역

- 예시로 든 구글은 Vue로 제작된것은 아님 , MVVM구조를 쉽게 이해하기위해서 예시를 든것

ㅁ컴포넌트 기반 프레임워크
컴포넌트는 일박적으로 입력을 받아 이를 기반으로 동작을 수행.
동작 수행은 통상 페이지 전체나 일부 UI변경으로 나타남.
컴포넌트를 사용하면 쉽게 코드를 재사용할수있음
컴포넌터는 페이지 전체 혹은 일부일 수 있음
페이지 전체가 컴포넌트의 트리 형태로 나타날 수 있음
하나의 페이지에서 일부 컴포넌트를 가져다가 다른페이지에서도 재사용할 수도 있음.

Veu.js에서는 UI 표현과 동작이 모두 컴포넌트 파일의 일부이기 때문에 React와 비교할 때 더 직관적으로 작업 할 수있음. Vue.js는 자바스트립트 내에서도 UI의 구성요소와 동작을 결합할 수 있음. 

출처: https://www.samsungsds.com/kr/insights/frameworks.html