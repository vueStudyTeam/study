10. 저번 시간 숙제와 Vuex 1 - 사용하는 이유

    - 데이터 주고받기 어려움
        - 하위 컴포넌트 전송은 props
        - 상위 컴포넌트 전송은 custom event / mitt

    - Vuex 사용하는 이유
        - js 파일 하나에 모든 데이터를 몰아넣고, 모든 컴포넌트에서 해당 데이터들을 조작할 수 있게 처리
        - 간단한 데이터 전달에도 코드가 길어진다는 단점이 있음 (대규모 프로젝트에서 사용 / 소규모 프로젝트에서는 props 사용이 더 단순)

        $ npm install vuex@next

    - Vuex 4 세팅
        - src/store.js 파일 생성
        - 아래 코드 작성하여 store 생성
            import { createStore } from 'vuex'

            const store = createStore({
                state () {
                    return {
                        변수 : 값
                    }
                }
            })

            export default store;

        - main.js 내에 생성된 store 등록
            import store from './store.js'
            app.use(store).mount('#app')

        - 모든 컴포넌트에서 store에 등록된 데이터(state) 사용 가능
            {{ $store.state.변수명 }}
            - 모든 컴포넌트에서 state의 읽기 및 쓰기가 모두 가능하지만, 컴포넌트 내에서 직접 수정하지 않는 것이 좋다.
                (어디서 state가 수정되었는지 추적하기가 어려움)
            - store.js 내에 미리 state의 수정 방법을 정의해두고, 컴포넌트에서는 해당 방법을 호출하여 사용하기만 해야 한다.